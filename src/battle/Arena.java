package battle;

import droids.Droid;
import java.util.List;
import java.util.Random;

public class Arena {
    private String name;
    private String effectDescription;

    public Arena(String name, String effectDescription) {
        this.name = name;
        this.effectDescription = effectDescription;
    }

    public String getName() {
        return name;
    }

    public String getEffectDescription() {
        return effectDescription;
    }

    public void applyEffect(List<Droid> team1, List<Droid> team2) {
        switch (name) {
            case "–í—É–ª–∫–∞–Ω" -> {
                team1.forEach(d -> d.setDamage((int) (d.getDamage() * 1.2)));
                team2.forEach(d -> d.setDamage((int) (d.getDamage() * 1.2)));
                System.out.println("–ê—Ä–µ–Ω–∞ –í—É–ª–∫–∞–Ω: —É—Å—ñ –¥—Ä–æ—ó–¥–∏ –Ω–∞–Ω–æ—Å—è—Ç—å +20% —à–∫–æ–¥–∏!");
            }
            case "–ö—Ä–∏–≥–∞" -> {
                team1.forEach(d -> d.setDamage((int) (d.getDamage() * 0.8)));
                team2.forEach(d -> d.setDamage((int) (d.getDamage() * 0.8)));
                System.out.println("‚ùÑ –ê—Ä–µ–Ω–∞ –ö—Ä–∏–≥–∞: —É—Å—ñ –¥—Ä–æ—ó–¥–∏ –Ω–∞–Ω–æ—Å—è—Ç—å –Ω–∞ 20% –º–µ–Ω—à–µ —à–∫–æ–¥–∏!");
            }
            case "–ê—Ä–µ–Ω–∞ —Ö–∞–æ—Å—É" -> {
                Random rand = new Random();
                if (rand.nextBoolean()) {
                    team1.forEach(d -> d.setDamage(d.getDamage() + 5));
                    team2.forEach(d -> d.setDamage(d.getDamage() + 5));
                    System.out.println("‚ö° –ê—Ä–µ–Ω–∞ —Ö–∞–æ—Å—É: +5 –¥–æ —É—Ä–æ–Ω—É –¥–ª—è –≤—Å—ñ—Ö!");
                } else {
                    team1.forEach(d -> d.takeDamage(10));
                    team2.forEach(d -> d.takeDamage(10));
                    System.out.println("‚ö° –ê—Ä–µ–Ω–∞ —Ö–∞–æ—Å—É: –≤—Å—ñ –æ—Ç—Ä–∏–º—É—é—Ç—å 10 —à–∫–æ–¥–∏ –Ω–∞ —Å—Ç–∞—Ä—Ç—ñ!");
                }
            }
            case "–¢—É–º–∞–Ω" -> {
                System.out.println("üå´ –ê—Ä–µ–Ω–∞ –¢—É–º–∞–Ω: —Ç–æ—á–Ω—ñ—Å—Ç—å —Å–Ω–∞–π–ø–µ—Ä—ñ–≤ –∑–Ω–∏–∂–µ–Ω–∞ –Ω–∞ 20%!");
            }
        }

        team1.forEach(d -> d.applyArenaEffect(name));
        team2.forEach(d -> d.applyArenaEffect(name));
    }

    public static Arena getRandomArena() {
        List<Arena> arenas = List.of(
                new Arena("–í—É–ª–∫–∞–Ω", "–£—Å—ñ –¥—Ä–æ—ó–¥–∏ –Ω–∞–Ω–æ—Å—è—Ç—å +20% —à–∫–æ–¥–∏"),
                new Arena("–¢—É–º–∞–Ω", "–¢–æ—á–Ω—ñ—Å—Ç—å —Å–Ω–∞–π–ø–µ—Ä—ñ–≤ –∑–Ω–∏–∂–µ–Ω–∞ –Ω–∞ 20%"),
                new Arena("–ö—Ä–∏–≥–∞", "–£—Å—ñ –¥—Ä–æ—ó–¥–∏ –Ω–∞–Ω–æ—Å—è—Ç—å –Ω–∞ 20% –º–µ–Ω—à–µ —à–∫–æ–¥–∏"),
                new Arena("–ê—Ä–µ–Ω–∞ —Ö–∞–æ—Å—É", "–ù–µ—Å–ø–æ–¥—ñ–≤–∞–Ω—ñ –µ—Ñ–µ–∫—Ç–∏ –Ω–∞ —Å—Ç–∞—Ä—Ç—ñ –±–æ—é")
        );

        Random rand = new Random();
        return arenas.get(rand.nextInt(arenas.size()));
    }

    @Override
    public String toString() {
        return name + " (" + effectDescription + ")";
    }
}
